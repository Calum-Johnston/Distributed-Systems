
RM: VECTOR TIME STAMP EXPLAINED
- Store array Vi (vector clock for RM i)
- Array is (x,y,z) where x is number of updates in p1, y number of updates in p2 and z number of updates in p3
- When transmitting data, pass the vector clock (x, y, z)
- When recieving data, set vector clock of current RM (a,b,c) to (max(a, x), max(b, y), max(c, z)) KNOWN AS MERGE OPERATION
e -> e' since V(e) < V(e')
e concurrent to e' if neither V(e) <= V(e') and vice versa

- Can't process a request if one of the value (a, b, c) are less than the timestamp it currently has
- UPDATE RM every few updates, or when it needs information



